<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.johnny.cms.mapper.ProductMapper">
    <resultMap id="BaseResultMap" type="com.johnny.cms.domain.Product">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <constructor>
            <idArg column="pro_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="pro_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="pro_state" javaType="java.lang.String" jdbcType="CHAR"/>
            <arg column="pro_no" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="pro_price" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="pro_number" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="d_id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
        </constructor>
    </resultMap>


    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>


    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>


    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        `pro_id`, `pro_name`, `pro_state`, `pro_no`, `pro_price`, `pro_number`, `d_id`
    </sql>


    <select id="selectByExample" parameterType="com.johnny.cms.domain.ProductExample" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from `product`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>


    <delete id="deleteByExample" parameterType="com.johnny.cms.domain.ProductExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from `product`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>


    <insert id="insertSelective" parameterType="com.johnny.cms.domain.Product">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into `product`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="proId != null">
                `pro_id`,
            </if>
            <if test="proName != null">
                `pro_name`,
            </if>
            <if test="proState != null">
                `pro_state`,
            </if>
            <if test="proNo != null">
                `pro_no`,
            </if>
            <if test="proPrice != null">
                `pro_price`,
            </if>
            <if test="proNumber != null">
                `pro_number`,
            </if>
            <if test="dId != null">
                `d_id`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="proId != null">
                #{proId,jdbcType=INTEGER},
            </if>
            <if test="proName != null">
                #{proName,jdbcType=VARCHAR},
            </if>
            <if test="proState != null">
                #{proState,jdbcType=CHAR},
            </if>
            <if test="proNo != null">
                #{proNo,jdbcType=VARCHAR},
            </if>
            <if test="proPrice != null">
                #{proPrice,jdbcType=VARCHAR},
            </if>
            <if test="proNumber != null">
                #{proNumber,jdbcType=VARCHAR},
            </if>
            <if test="dId != null">
                #{dId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>


    <select id="countByExample" parameterType="com.johnny.cms.domain.ProductExample" resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from `product`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>


    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update `product`
        <set>
            <if test="record.proId != null">
                `pro_id` = #{record.proId,jdbcType=INTEGER},
            </if>
            <if test="record.proName != null">
                `pro_name` = #{record.proName,jdbcType=VARCHAR},
            </if>
            <if test="record.proState != null">
                `pro_state` = #{record.proState,jdbcType=CHAR},
            </if>
            <if test="record.proNo != null">
                `pro_no` = #{record.proNo,jdbcType=VARCHAR},
            </if>
            <if test="record.proPrice != null">
                `pro_price` = #{record.proPrice,jdbcType=VARCHAR},
            </if>
            <if test="record.proNumber != null">
                `pro_number` = #{record.proNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.dId != null">
                `d_id` = #{record.dId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>


    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update `product`
        set `pro_id` = #{record.proId,jdbcType=INTEGER},
        `pro_name` = #{record.proName,jdbcType=VARCHAR},
        `pro_state` = #{record.proState,jdbcType=CHAR},
        `pro_no` = #{record.proNo,jdbcType=VARCHAR},
        `pro_price` = #{record.proPrice,jdbcType=VARCHAR},
        `pro_number` = #{record.proNumber,jdbcType=VARCHAR},
        `d_id` = #{record.dId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>

    <!--//TODO：参考手动添加，启动报错：
    Caused by: java.lang.IllegalArgumentException: Mapped Statements collection already contains value
    for com.johnny.cms.mapper.ProductMapper.updateByPrimaryKey -->
    <!--<update id="updateByPrimaryKey" parameterType="com.johnny.cms.domain.Product">
      update product
      set pro_name = #{proName,jdbcType=VARCHAR},
      pro_state = #{proState,jdbcType=CHAR},
      pro_no = #{proNo,jdbcType=VARCHAR},
      pro_price = #{proPrice,jdbcType=VARCHAR},
      pro_number = #{proNumber,jdbcType=VARCHAR},
      d_id = #{dId,jdbcType=INTEGER}
      where pro_id = #{proId,jdbcType=INTEGER}
    </update>-->

    <update id="updateByPrimaryKeySelective" parameterType="com.johnny.cms.domain.Product">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update `product`

        <!--<trim prefix="set" suffixOverrides=",">
          <if test="proName != null">
            `pro_name` = #{proName,jdbcType=VARCHAR},
          </if>
          <if test="proState != null">
            `pro_state` = #{proState,jdbcType=CHAR},
          </if>
          <if test="proNo != null">
            `pro_no` = #{proNo,jdbcType=VARCHAR},
          </if>
          <if test="proPrice != null">
            `pro_price` = #{proPrice,jdbcType=VARCHAR},
          </if>
          <if test="proNumber != null">
            `pro_number` = #{proNumber,jdbcType=VARCHAR},
          </if>
          <if test="dId != null">
            `d_id` = #{dId,jdbcType=INTEGER},
          </if>
        </trim>-->


        <set>
            <if test="proName != null">
                `pro_name` = #{proName,jdbcType=VARCHAR},
            </if>
            <if test="proState != null">
                `pro_state` = #{proState,jdbcType=CHAR},
            </if>
            <if test="proNo != null">
                `pro_no` = #{proNo,jdbcType=VARCHAR},
            </if>
            <if test="proPrice != null">
                `pro_price` = #{proPrice,jdbcType=VARCHAR},
            </if>
            <if test="proNumber != null">
                `pro_number` = #{proNumber,jdbcType=VARCHAR},
            </if>
            <if test="dId != null">
                `d_id` = #{dId,jdbcType=INTEGER},
            </if>
        </set>
        where `pro_id` = #{proId,jdbcType=INTEGER}
    </update>

    <!--//TODO-->
    <resultMap id="WithCateResultMap" type="com.johnny.cms.domain.Product">
        <id column="pro_id" jdbcType="INTEGER" property="proId"/>
        <result column="pro_name" jdbcType="VARCHAR" property="proName"/>
        <result column="pro_state" jdbcType="CHAR" property="proState"/>
        <result column="pro_no" jdbcType="VARCHAR" property="proNo"/>
        <result column="pro_price" jdbcType="VARCHAR" property="proPrice"/>
        <result column="pro_number" jdbcType="VARCHAR" property="proNumber"/>
        <result column="d_id" jdbcType="INTEGER" property="dId"/>
        <!-- 指定联合查询出的“种类”字段的封装 -->
        <association javaType="com.johnny.cms.domain.Category" property="category">
            <id column="cate_id" property="cateId"/>
            <result column="cate_name" property="cateName"/>
        </association>
    </resultMap>

    <!-- TODO: 查询商品时要带着种类信息  -->
    <sql id="WithCate_Column_List">
    e.pro_id, e.pro_name, e.pro_state, e.pro_no, e.pro_price, e.pro_number, e.d_id, d.cate_id, d.cate_name
  </sql>

    <select id="selectByExampleWithCate" resultMap="WithCateResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="WithCate_Column_List"/>
        FROM product e
        left join category d on e.`d_id`=d.`cate_id`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <!-- 如果未指定查询顺序，则以prducts表的主键id排序  -->
        <if test="orderByClause == null">
            order by e.pro_id
        </if>
    </select>

    <select id="selectByPrimaryKeyWithCate" resultMap="WithCateResultMap">
        select
        <include refid="WithCate_Column_List"/>
        FROM product e
        left join category d on e.`d_id`=d.`cate_id`
        where pro_id = #{proId,jdbcType=INTEGER}
    </select>
</mapper>